name: üöÄ Invoicing api
on:
  push:
    branches:
      - main
      - 10-finish-ci-cd-pipeline

permissions:
  id-token: write
  contents: read

jobs:  

  build-and-push-to-registry:
    name: 'üõ†Ô∏è Build and push Invoice Service'
    runs-on: ubuntu-latest
    
    steps:
      - name: 'üì• Checkout code'
        uses: actions/checkout@main

      - name: '‚öôÔ∏è Extract the acr name from infrastructure json'
        run: |
          acrName=$( echo '${{ vars.CORE_INFRASTRUCTURE }}' | jq '.containerRegistryName' )
          echo "ACR_NAME=$acrName" >> "$GITHUB_ENV"

      - name: 'üîë Login to Azure'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'üîë Login to Azure Container Registry'
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: 'üõ†Ô∏è Build and push to registry'
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/invoice-service:latest \
                       -t ${{ env.ACR_NAME }}.azurecr.io/invoice-service:${{ github.sha }} \
                       -f ./Services/InvoiceService/InvoiceService.Api/Dockerfile \
                       .
          docker push ${{ env.ACR_NAME }}.azurecr.io/invoice-service:latest
          docker push ${{ env.ACR_NAME }}.azurecr.io/invoice-service:${{ github.sha }}

  deploy:
    name: 'üñ•Ô∏è Deploy Invoice Service'
    runs-on: ubuntu-latest
    needs: build-and-push-to-registry
    steps:
      
      - name: 'üì• Checkout code'
        uses: actions/checkout@main
      
      - name: '‚öôÔ∏è Extract the resource group name from infrastructure json'
        run: |
          resourcegroup=$( echo '${{ vars.INVOICE_SERVICE_INFRASTRUCTURE }}' | jq '.resourceGroup' )
          echo "RESOURCE_GROUP=$resourcegroup" >> "$GITHUB_ENV"

      - name: 'üîë Login to Azure'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
      - name: 'üñ•Ô∏è Deploy azure infrastructure'
        run: |
          az group create --name ${{ env.RESOURCE_GROUP }} --location northeurope
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file  ./Services/InvoiceService/infrastructure/main.bicep \
            --parameters coreInfrastructure='${{ vars.CORE_INFRASTRUCTURE }}' \
                         invoiceServiceInfrastructure='${{ vars.INVOICE_SERVICE_INFRASTRUCTURE }}' \
                         imageTag='${{ github.sha }}'
